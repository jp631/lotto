{"ast":null,"code":"const theDates = ['2019-08-27T01:11:13.000Z', '2020-09-27T01:11:13.000Z', '2020-11-27T01:11:13.000Z', '2020-10-27T01:10:13.000Z']; // export const getGreaterDate = (date, dateArray) => {\n//     let checkdate = new Date(date);\n//     dateArray.forEach(element => {\n//       ( ( new Date(date)) < (new Date(element)) )? checkdate = new Date(date) : checkdate = new Date(element)\n//     });\n//     console.log(checkdate)\n//     return checkdate;\n// }\n\ngetGreaterDate('2020-10-27T01:10:13.000Z', theDates);\nexport const getGreaterDate = (date, dateArray) => {\n  let checkdate = new Date(date);\n  dateArray.forEach(element => {\n    new Date(date) < new Date(element) ? checkdate = new Date(date) : checkdate = new Date(element);\n  });\n  console.log(checkdate);\n  dateArray.filter(item => {\n    new Date(date) < new Date(element) ? checkdate = new Date(date) : '';\n  });\n  return checkdate;\n}; // the function is supposed to take an date and an array of date\n//it will compare the date with every other date in the array and return the bigger date \n// I try to use filter but it does work really","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/lotto/src/utils/utilFunctions.js"],"names":["theDates","getGreaterDate","date","dateArray","checkdate","Date","forEach","element","console","log","filter","item"],"mappings":"AAAC,MAAMA,QAAQ,GAAG,CACd,0BADc,EAEd,0BAFc,EAGd,0BAHc,EAId,0BAJc,CAAjB,C,CAOD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEAC,cAAc,CAAC,0BAAD,EAA6BD,QAA7B,CAAd;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC/C,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAhB;AACAC,EAAAA,SAAS,CAACG,OAAV,CAAkBC,OAAO,IAAI;AACvB,QAAIF,IAAJ,CAASH,IAAT,CAAF,GAAqB,IAAIG,IAAJ,CAASE,OAAT,CAAvB,GAA6CH,SAAS,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAzD,GAA0EE,SAAS,GAAG,IAAIC,IAAJ,CAASE,OAAT,CAAtF;AACD,GAFD;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEAD,EAAAA,SAAS,CAACO,MAAV,CAAiBC,IAAI,IAAI;AACjB,QAAIN,IAAJ,CAASH,IAAT,CAAF,GAAqB,IAAIG,IAAJ,CAASE,OAAT,CAAvB,GAA8CH,SAAS,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAA1D,GAA2E,EAA3E;AACH,GAFD;AAIA,SAAOE,SAAP;AACH,CAZM,C,CAeP;AACA;AACA","sourcesContent":[" const theDates = [\n    '2019-08-27T01:11:13.000Z',\n    '2020-09-27T01:11:13.000Z',\n    '2020-11-27T01:11:13.000Z',\n    '2020-10-27T01:10:13.000Z'\n]\n\n// export const getGreaterDate = (date, dateArray) => {\n//     let checkdate = new Date(date);\n//     dateArray.forEach(element => {\n//       ( ( new Date(date)) < (new Date(element)) )? checkdate = new Date(date) : checkdate = new Date(element)\n//     });\n//     console.log(checkdate)\n\n//     return checkdate;\n// }\n\ngetGreaterDate('2020-10-27T01:10:13.000Z', theDates)\n\nexport const getGreaterDate = (date, dateArray) => {\n    let checkdate = new Date(date);\n    dateArray.forEach(element => {\n      ( ( new Date(date)) < (new Date(element)) )? checkdate = new Date(date) : checkdate = new Date(element)\n    });\n    console.log(checkdate)\n\n    dateArray.filter(item => {\n        ( ( new Date(date)) < (new Date(element)) ) ? checkdate = new Date(date) : ''\n    })\n\n    return checkdate;\n}\n\n\n// the function is supposed to take an date and an array of date\n//it will compare the date with every other date in the array and return the bigger date \n// I try to use filter but it does work really"]},"metadata":{},"sourceType":"module"}